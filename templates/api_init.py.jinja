""" Contains methods for accessing the API """
from __future__ import annotations

from typing import List
import re

from binarylane.console.runners import Descriptor

__all__ = ['descriptors']
descriptors : List[Descriptor] = []

def add_descriptor(module_path: str, name: str, description: str) -> None:
    # Many API operation summaries are written title-cased (like a headline), rather than as a sentence.
    description = re.sub(r" ([A-Z])([a-z]+\b)", lambda m: " " + m.group(1).lower() + m.group(2), description)

    descriptors.append(Descriptor(module_path, name, description))

{% set _ = openapi.__setattr__('endpoints_by_name', {}) %}
{% for key, value in endpoint_collections_by_tag | dictsort %}
{% for endpoint in value.endpoints if endpoint.data['x-cli-command'] %}
{% set _ = openapi.endpoints_by_name.__setitem__(endpoint.data['x-cli-command'], endpoint) %}
add_descriptor('.commands.api.{{ python_identifier(endpoint.name) }}', '{{ endpoint.data['x-cli-command'] }}', '{{ endpoint.summary }}',)
{% include "lookups.jinja" %}
{% endfor %}
{% endfor %}
